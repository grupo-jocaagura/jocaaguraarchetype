name: Validate and Update Version on PR

on:
  pull_request:
    branches:
      - develop

jobs:
  validate_and_update:
    name: Validate PR and Update Version
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Dart
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: stable

    - name: Install Dependencies
      run: dart pub get

    - name: Analyze Code
      run: dart analyze

    - name: Check Formatting
      run: dart format --set-exit-if-changed .

    - name: Run Tests
      run: dart test

    - name: Validate Changelog Update
      run: |
        if ! git diff --name-only origin/develop | grep -q CHANGELOG.md; then
          echo "❌ CHANGELOG.md must be updated."
          exit 1
        fi

    - name: Increment Version Based on Label
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        CURRENT_VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
        echo "Current version: $CURRENT_VERSION"

        # Determine version bump based on PR labels
        if [[ "${{ github.event.pull_request.labels }}" == *"major"* ]]; then
          UPDATED_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$1+=1; $2=0; $3=0}1' OFS=".")
        elif [[ "${{ github.event.pull_request.labels }}" == *"minor"* ]]; then
          UPDATED_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$2+=1; $3=0}1' OFS=".")
        elif [[ "${{ github.event.pull_request.labels }}" == *"patch"* ]]; then
          UPDATED_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$3+=1}1' OFS=".")
        else
          echo "❌ No version label found. Please add 'major', 'minor', or 'patch'."
          exit 1
        fi

        echo "Updated version: $UPDATED_VERSION"
        sed -i "s/^version:.*/version: $UPDATED_VERSION/" pubspec.yaml

        # Commit and push the updated version
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git add pubspec.yaml
        git commit -m "Bump version to $UPDATED_VERSION"
        git push origin ${{ github.head_ref }}
